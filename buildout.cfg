[buildout]
extends = versions.cfg
find-links =
    https://github.com/datakurre/eye/tarball/master#egg=eye-1.0.1dev
parts =
# Utils
    env
    activate
# App and ZEO
    pyramid
    zeo.conf
    zeo-asko.conf
    zeo-matti.conf
    postbuild
# Supervisor
    supervisor
# Misc
    test
    analyze
    eye
eggs =
    Paste
    waitress
    working-memory-games
    pyramid-debugtoolbar
develop = .
versions = versions
newest = false

[env]
recipe = gocept.recipe.env

[activate]
recipe = evg.recipe.activate

[versions]
zc.buildout = 1.6.3
distribute = 0.6.30

[pyramid]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
scripts = pserve runzeo zeopack
dependent-scripts = true
interpreter = python

[analyze]
recipe = collective.recipe.template
input = inline:
    from ZODB.scripts.analyze import report, analyze
    report(analyze("${buildout:directory}/var/filestorage/Data.fs"))
output = ${buildout:parts-directory}/analyze.py

[eye]
recipe = zc.recipe.egg
eggs =
    ${buildout:eggs}
    eye

[zeo.conf]
recipe = collective.recipe.template
postfix =
input = inline:
    <zeo>
        address ${buildout:directory}/var/zeo${:postfix}.sock
        pid-filename ${buildout:directory}/var/zeo${:postfix}.pid
        read-only false
        invalidation-queue-size 100
    </zeo>
    <blobstorage 1>
        <filestorage>
            path ${buildout:directory}/var/filestorage${:postfix}/Data.fs
        </filestorage>
        blob-dir ${buildout:directory}/var/blobstorage${:postfix}
    </blobstorage>
output = ${buildout:parts-directory}/zeo${:postfix}.conf

[zeo-asko.conf]
<= zeo.conf
postfix = -asko

[zeo-matti.conf]
<= zeo.conf
postfix = -matti

[postbuild]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    mkdir -p ${buildout:directory}/var/filestorage
    mkdir -p ${buildout:directory}/var/blobstorage
    mkdir -p ${buildout:directory}/var/filestorage-asko
    mkdir -p ${buildout:directory}/var/blobstorage-asko
    mkdir -p ${buildout:directory}/var/filestorage-matti
    mkdir -p ${buildout:directory}/var/blobstorage-matti

[reset]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    rm -rf ${buildout:directory}/var/filestorage/*
    rm -rf ${buildout:directory}/var/blobstorage/*
    rm -rf ${buildout:directory}/var/filestorage-asko/*
    rm -rf ${buildout:directory}/var/blobstorage-asko/*
    rm -rf ${buildout:directory}/var/filestorage-matti/*
    rm -rf ${buildout:directory}/var/blobstorage-matti/*

[supervisor]
recipe = collective.recipe.supervisor
port = 9001
user = admin
password = admin
programs =
    10 zeo ${buildout:bin-directory}/runzeo [-C ${zeo.conf:output}] true ${env:USER}
    10 zeo-asko ${buildout:bin-directory}/runzeo [-C ${zeo-asko.conf:output}] true ${env:USER}
    10 zeo-matti ${buildout:bin-directory}/runzeo [-C ${zeo-matti.conf:output}] true ${env:USER}
    20 pyramid (autostart=false) ${buildout:bin-directory}/pserve [${buildout:directory}/production.ini] true ${env:USER}
    20 pyramid-asko (autostart=false) ${buildout:bin-directory}/pserve [${buildout:directory}/asko.ini] true ${env:USER}
    20 pyramid-matti (autostart=false) ${buildout:bin-directory}/pserve [${buildout:directory}/matti.ini] true ${env:USER}
# groups =
#     10 zeo zeo,zeo-asko,zeo-matti
#     20 pyramid pyramid,pyramid-asko,pyramid-matti

[test]
recipe = zc.recipe.testrunner
eggs = working_memory_games [test]
defaults = ['--auto-color', '--auto-progress']
